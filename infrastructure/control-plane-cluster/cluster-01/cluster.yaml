---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "cluster-01"
  namespace: "cluster-01"
  labels:
    cluster.x-k8s.io/cluster-name: "cluster-01"
    crs: enabled
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - "192.168.0.0/20"
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: AWSCluster
    name: "cluster-01"
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: "cluster-01-control-plane"
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSCluster
metadata:
  name: "cluster-01"
  namespace: "cluster-01"
spec:
  region: "ap-southeast-2"
  sshKeyName: "cks"
  network:
    vpc:
      availabilityZoneUsageLimit: 1
    cni:
      cniIngressRules:
      - description: "(cilium) VXLAN overlay"
        protocol: udp
        fromPort: 8472
        toPort: 8472
      - description: "(cilium) health checks"
        protocol: tcp
        fromPort: 4240
        toPort: 4240
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: "cluster-01-control-plane"
  namespace: "cluster-01"
spec:
  replicas: 1
  machineTemplate:
    infrastructureRef:
      kind: AWSMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "cluster-01-control-plane"
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        name: '{{ ds.meta_data.local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: aws
      skipPhases:
      - addon/kube-proxy
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: aws
      controllerManager:
        extraArgs:
          cloud-provider: aws
    joinConfiguration:
      nodeRegistration:
        name: '{{ ds.meta_data.local_hostname }}'
        kubeletExtraArgs:
          cloud-provider: aws
  version: "1.24.7"
---
kind: AWSMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  name: "cluster-01-control-plane"
  namespace: "cluster-01"
spec:
  template:
    spec:
      instanceType: "t3.medium"
      iamInstanceProfile: "control-plane.cluster-api-provider-aws.sigs.k8s.io"
      sshKeyName: "cks"
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "cluster-01-md-0"
  namespace: "cluster-01"
spec:
  clusterName: "cluster-01"
  replicas: 1
  selector:
    matchLabels:
  template:
    spec:
      clusterName: "cluster-01"
      version: "1.24.7"
      bootstrap:
        configRef:
          name: "cluster-01-md-0"
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
      infrastructureRef:
        name: "cluster-01-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: AWSMachineTemplate
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: AWSMachineTemplate
metadata:
  name: "cluster-01-md-0"
  namespace: "cluster-01"
spec:
  template:
    spec:
      instanceType: "t3.medium"
      iamInstanceProfile: "nodes.cluster-api-provider-aws.sigs.k8s.io"
      sshKeyName: "cks"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: "cluster-01-md-0"
  namespace: "cluster-01"
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          name: '{{ ds.meta_data.local_hostname }}'
          kubeletExtraArgs:
            cloud-provider: aws
            max-pods: '64'
